import type { RouteData, SSRResult } from 'astro';
import { type RenderInstruction } from 'astro/dist/runtime/server/render/instruction';
import { HTMLBytes } from 'astro/dist/runtime/server/escape';
import { type RenderInstance } from 'astro/dist/runtime/server/render/common';
declare const needsHeadRenderingSymbol: unique symbol;
export type ComponentIterable = AsyncIterable<string | HTMLBytes | RenderInstruction>;
export declare function renderComponent(result: SSRResult, displayName: string, Component: unknown, props: Record<string | number, any>, slots?: any): Promise<RenderInstance>;
export declare function renderComponentToString(result: SSRResult, displayName: string, Component: unknown, props: Record<string | number, any>, slots?: any, isPage?: boolean, route?: RouteData): Promise<string>;
export type NonAstroPageComponent = {
    name: string;
    [needsHeadRenderingSymbol]: boolean;
};
export {};
